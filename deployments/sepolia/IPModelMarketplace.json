{
  "address": "0x8fCf9a6F6a817D4383124982371E1A821E09addE",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ipModelContract",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldRecipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRecipient",
          "type": "address"
        }
      ],
      "name": "RecipientChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "groupId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalPrice",
          "type": "uint256"
        }
      ],
      "name": "TokensPurchased",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "groupId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "groupId",
          "type": "uint256"
        }
      ],
      "name": "getGroupDetails",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "maxSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "currentSupply",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "payToken",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ipModelContract",
      "outputs": [
        {
          "internalType": "contract IIPModel",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "recipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "setRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x2be6f02007b8a0ffd7302bf0c72efba78350eb3662e72a2012d2b7fe676655c8",
  "receipt": {
    "to": null,
    "from": "0xdD7Ad47da281b5aDBa6Dbd865E8488F3F01900E9",
    "contractAddress": "0x8fCf9a6F6a817D4383124982371E1A821E09addE",
    "transactionIndex": 136,
    "gasUsed": "769601",
    "logsBloom": "0x00000000000000000000000000000000100000000000000000800000000000000000000000000000004000000000008000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000020000000000000000000800000000000000000000000000000000400000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000004000000000000000000000",
    "blockHash": "0x9b978131039929a5256a6638f1a48e05314357b337b3a4df1293f61e52e1f3ab",
    "transactionHash": "0x2be6f02007b8a0ffd7302bf0c72efba78350eb3662e72a2012d2b7fe676655c8",
    "logs": [
      {
        "transactionIndex": 136,
        "blockNumber": 8726183,
        "transactionHash": "0x2be6f02007b8a0ffd7302bf0c72efba78350eb3662e72a2012d2b7fe676655c8",
        "address": "0x8fCf9a6F6a817D4383124982371E1A821E09addE",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000dd7ad47da281b5adba6dbd865e8488f3f01900e9"
        ],
        "data": "0x",
        "logIndex": 244,
        "blockHash": "0x9b978131039929a5256a6638f1a48e05314357b337b3a4df1293f61e52e1f3ab"
      },
      {
        "transactionIndex": 136,
        "blockNumber": 8726183,
        "transactionHash": "0x2be6f02007b8a0ffd7302bf0c72efba78350eb3662e72a2012d2b7fe676655c8",
        "address": "0x8fCf9a6F6a817D4383124982371E1A821E09addE",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x000000000000000000000000dd7ad47da281b5adba6dbd865e8488f3f01900e9",
          "0x000000000000000000000000dd7ad47da281b5adba6dbd865e8488f3f01900e9"
        ],
        "data": "0x",
        "logIndex": 245,
        "blockHash": "0x9b978131039929a5256a6638f1a48e05314357b337b3a4df1293f61e52e1f3ab"
      }
    ],
    "blockNumber": 8726183,
    "cumulativeGasUsed": "21860387",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xC27c894F4661A0FE5fF36341F298d33cd4876B44",
    "0xdD7Ad47da281b5aDBa6Dbd865E8488F3F01900E9"
  ],
  "numDeployments": 1,
  "solcInputHash": "7e6558a6c2b85eef50e28e4b705263de",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ipModelContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldRecipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRecipient\",\"type\":\"address\"}],\"name\":\"RecipientChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"groupId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalPrice\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"groupId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"groupId\",\"type\":\"uint256\"}],\"name\":\"getGroupDetails\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentSupply\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"payToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ipModelContract\",\"outputs\":[{\"internalType\":\"contract IIPModel\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"setRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IPModleMarketplace.sol\":\"IPModelMarketplace\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/IPModleMarketplace.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.24;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./interfaces/IIPModel.sol\\\";\\n\\ncontract IPModelMarketplace is Ownable, ReentrancyGuard {\\n    \\n    // IPModel\\u5408\\u7ea6\\u5b9e\\u4f8b\\n    IIPModel public immutable ipModelContract;\\n    \\n    // \\u6536\\u6b3e\\u5730\\u5740\\n    address public recipient;\\n    \\n    // \\u4e8b\\u4ef6\\n    event TokensPurchased(address indexed buyer, uint256 indexed groupId, uint256 amount, uint256 totalPrice);\\n    event RecipientChanged(address indexed oldRecipient, address indexed newRecipient);\\n    \\n    constructor(address _ipModelContract, address _recipient) {\\n        require(_ipModelContract != address(0), \\\"Marketplace: Invalid contract address\\\");\\n        require(_recipient != address(0), \\\"Marketplace: Invalid recipient address\\\");\\n        ipModelContract = IIPModel(_ipModelContract);\\n        recipient = _recipient;\\n        _transferOwnership(msg.sender);\\n    }\\n    \\n    // \\u8bbe\\u7f6e\\u6536\\u6b3e\\u5730\\u5740\\n    function setRecipient(address _recipient) external onlyOwner {\\n        require(_recipient != address(0), \\\"Marketplace: Invalid recipient address\\\");\\n        address oldRecipient = recipient;\\n        recipient = _recipient;\\n        emit RecipientChanged(oldRecipient, _recipient);\\n    }\\n    \\n    // \\u8d2d\\u4e70\\u4ee3\\u5e01\\uff08\\u4f7f\\u7528ERC20\\u652f\\u4ed8\\uff09\\n    function buyTokens(uint256 groupId, uint256 amount) external nonReentrant {\\n        require(groupId > 0, \\\"Marketplace: Invalid group ID\\\");\\n        require(amount > 0, \\\"Marketplace: Amount must be greater than 0\\\");\\n        \\n        // \\u83b7\\u53d6\\u7ec4\\u4fe1\\u606f\\n        (, , uint256 maxSupply, uint256 currentSupply, bool isActive, uint256 price, address payToken) = ipModelContract.getGroupInfo(groupId);\\n        require(isActive, \\\"Marketplace: Group sale not active\\\");\\n        require(price > 0, \\\"Marketplace: Price not set\\\");\\n        require(payToken != address(0), \\\"Marketplace: Payment token not set\\\");\\n        \\n        // \\u68c0\\u67e5\\u4f9b\\u5e94\\u91cf\\u9650\\u5236\\n        if (maxSupply > 0) {\\n            require(currentSupply + amount <= maxSupply, \\\"Marketplace: Exceeds max supply\\\");\\n        }\\n        \\n        uint256 totalPrice = price * amount;\\n        \\n        // \\u76f4\\u63a5\\u4ece\\u7528\\u6237\\u8f6c\\u79fbERC20\\u4ee3\\u5e01\\u5230\\u6536\\u6b3e\\u5730\\u5740\\n        IERC20(payToken).transferFrom(msg.sender, recipient, totalPrice);\\n        \\n        // \\u76f4\\u63a5\\u8c03\\u7528IPModel\\u7684mint\\u51fd\\u6570\\n        ipModelContract.mint(msg.sender, groupId, amount);\\n        \\n        emit TokensPurchased(msg.sender, groupId, amount, totalPrice);\\n    }\\n    \\n    // \\u67e5\\u8be2\\u7ec4\\u4fe1\\u606f\\uff08\\u4eceIPModel\\u5408\\u7ea6\\u83b7\\u53d6\\uff09\\n    function getGroupDetails(uint256 groupId) external view returns (\\n        string memory name,\\n        string memory description,\\n        uint256 maxSupply,\\n        uint256 currentSupply,\\n        bool isActive,\\n        uint256 price,\\n        address payToken\\n    ) {\\n        return ipModelContract.getGroupInfo(groupId);\\n    }\\n}\\n\",\"keccak256\":\"0x860e3198b94bf4e7a0319a896eaf2b532d8fbbdb3a35760a0755401dd9ceb1ff\",\"license\":\"MIT\"},\"contracts/interfaces/IIPModel.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.24;\\n\\ninterface IIPModel {\\n    // \\u83b7\\u53d6\\u7ec4\\u4fe1\\u606f\\n    function getGroupInfo(uint256 groupId) external view returns (\\n        string memory name,\\n        string memory description, \\n        uint256 maxSupply,\\n        uint256 currentSupply,\\n        bool isActive,\\n        uint256 price,\\n        address payToken\\n    );\\n    \\n    // \\u94f8\\u9020\\u4ee3\\u5e01\\n    function mint(address to, uint256 groupId, uint256 amount) external;\\n}\\n\",\"keccak256\":\"0x3d635e18739a0572748011e65fd8efc3f1d9db228cadde1c162946a66e77b63e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610d9d380380610d9d83398101604081905261002f916101ab565b6100383361013f565b600180556001600160a01b0382166100a55760405162461bcd60e51b815260206004820152602560248201527f4d61726b6574706c6163653a20496e76616c696420636f6e7472616374206164604482015264647265737360d81b60648201526084015b60405180910390fd5b6001600160a01b03811661010a5760405162461bcd60e51b815260206004820152602660248201527f4d61726b6574706c6163653a20496e76616c696420726563697069656e74206160448201526564647265737360d01b606482015260840161009c565b6001600160a01b03828116608052600280546001600160a01b0319169183169190911790556101383361013f565b50506101de565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146101a657600080fd5b919050565b600080604083850312156101be57600080fd5b6101c78361018f565b91506101d56020840161018f565b90509250929050565b608051610b8f61020e6000396000818161010301528181610347015281816105fb01526106b70152610b8f6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100ed578063959d1aeb146100fe5780639de5e76a14610125578063f2fde38b1461014b57600080fd5b80633bbed4a01461008d57806366d003ac146100a2578063715018a6146100d25780637975ce28146100da575b600080fd5b6100a061009b366004610897565b61015e565b005b6002546100b5906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100a0610222565b6100a06100e83660046108bb565b610236565b6000546001600160a01b03166100b5565b6100b57f000000000000000000000000000000000000000000000000000000000000000081565b6101386101333660046108dd565b6106aa565b6040516100c99796959493929190610946565b6100a0610159366004610897565b61075f565b6101666107d8565b6001600160a01b0381166101d05760405162461bcd60e51b815260206004820152602660248201527f4d61726b6574706c6163653a20496e76616c696420726563697069656e74206160448201526564647265737360d01b60648201526084015b60405180910390fd5b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f4a9d367b1b0cd787be10021f1c55cb49c9f2302334e6df35c9621005eb22251490600090a35050565b61022a6107d8565b6102346000610832565b565b6002600154036102885760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016101c7565b6002600155816102da5760405162461bcd60e51b815260206004820152601d60248201527f4d61726b6574706c6163653a20496e76616c69642067726f757020494400000060448201526064016101c7565b6000811161033d5760405162461bcd60e51b815260206004820152602a60248201527f4d61726b6574706c6163653a20416d6f756e74206d75737420626520677265616044820152690746572207468616e20360b41b60648201526084016101c7565b60008060008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166399d4360f886040518263ffffffff1660e01b815260040161039391815260200190565b600060405180830381865afa1580156103b0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103d89190810190610a52565b9650965096509650965050508261043c5760405162461bcd60e51b815260206004820152602260248201527f4d61726b6574706c6163653a2047726f75702073616c65206e6f742061637469604482015261766560f01b60648201526084016101c7565b6000821161048c5760405162461bcd60e51b815260206004820152601a60248201527f4d61726b6574706c6163653a205072696365206e6f742073657400000000000060448201526064016101c7565b6001600160a01b0381166104ed5760405162461bcd60e51b815260206004820152602260248201527f4d61726b6574706c6163653a205061796d656e7420746f6b656e206e6f742073604482015261195d60f21b60648201526084016101c7565b841561054c57846104fe8786610b0e565b111561054c5760405162461bcd60e51b815260206004820152601f60248201527f4d61726b6574706c6163653a2045786365656473206d617820737570706c790060448201526064016101c7565b60006105588784610b27565b6002546040516323b872dd60e01b81523360048201526001600160a01b039182166024820152604481018390529192508316906323b872dd906064016020604051808303816000875af11580156105b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d79190610b3e565b50604051630ab714fb60e11b815233600482015260248101899052604481018890527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063156e29f690606401600060405180830381600087803b15801561064757600080fd5b505af115801561065b573d6000803e3d6000fd5b5050604080518a8152602081018590528b93503392507f0d1a0d5e3d583a0e92588799dd06e50fd78c07daf05f0cc06d7b848b1ca445f1910160405180910390a3505060018055505050505050565b60608060008060008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166399d4360f896040518263ffffffff1660e01b815260040161070391815260200190565b600060405180830381865afa158015610720573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107489190810190610a52565b959e949d50929b5090995097509550909350915050565b6107676107d8565b6001600160a01b0381166107cc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101c7565b6107d581610832565b50565b6000546001600160a01b031633146102345760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101c7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146107d557600080fd5b6000602082840312156108a957600080fd5b81356108b481610882565b9392505050565b600080604083850312156108ce57600080fd5b50508035926020909101359150565b6000602082840312156108ef57600080fd5b5035919050565b60005b838110156109115781810151838201526020016108f9565b50506000910152565b600081518084526109328160208601602086016108f6565b601f01601f19169290920160200192915050565b60e08152600061095960e083018a61091a565b828103602084015261096b818a61091a565b604084019890985250506060810194909452911515608084015260a08301526001600160a01b031660c09091015292915050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126109c657600080fd5b815167ffffffffffffffff808211156109e1576109e161099f565b604051601f8301601f19908116603f01168101908282118183101715610a0957610a0961099f565b81604052838152866020858801011115610a2257600080fd5b610a338460208301602089016108f6565b9695505050505050565b80518015158114610a4d57600080fd5b919050565b600080600080600080600060e0888a031215610a6d57600080fd5b875167ffffffffffffffff80821115610a8557600080fd5b610a918b838c016109b5565b985060208a0151915080821115610aa757600080fd5b50610ab48a828b016109b5565b9650506040880151945060608801519350610ad160808901610a3d565b925060a0880151915060c0880151610ae881610882565b8091505092959891949750929550565b634e487b7160e01b600052601160045260246000fd5b80820180821115610b2157610b21610af8565b92915050565b8082028115828204841417610b2157610b21610af8565b600060208284031215610b5057600080fd5b6108b482610a3d56fea2646970667358221220a847bef050d05eee672b8bc747beaedc09e1261a148dd204e0eaa8ca2f94b33b64736f6c63430008180033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100ed578063959d1aeb146100fe5780639de5e76a14610125578063f2fde38b1461014b57600080fd5b80633bbed4a01461008d57806366d003ac146100a2578063715018a6146100d25780637975ce28146100da575b600080fd5b6100a061009b366004610897565b61015e565b005b6002546100b5906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100a0610222565b6100a06100e83660046108bb565b610236565b6000546001600160a01b03166100b5565b6100b57f000000000000000000000000000000000000000000000000000000000000000081565b6101386101333660046108dd565b6106aa565b6040516100c99796959493929190610946565b6100a0610159366004610897565b61075f565b6101666107d8565b6001600160a01b0381166101d05760405162461bcd60e51b815260206004820152602660248201527f4d61726b6574706c6163653a20496e76616c696420726563697069656e74206160448201526564647265737360d01b60648201526084015b60405180910390fd5b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f4a9d367b1b0cd787be10021f1c55cb49c9f2302334e6df35c9621005eb22251490600090a35050565b61022a6107d8565b6102346000610832565b565b6002600154036102885760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016101c7565b6002600155816102da5760405162461bcd60e51b815260206004820152601d60248201527f4d61726b6574706c6163653a20496e76616c69642067726f757020494400000060448201526064016101c7565b6000811161033d5760405162461bcd60e51b815260206004820152602a60248201527f4d61726b6574706c6163653a20416d6f756e74206d75737420626520677265616044820152690746572207468616e20360b41b60648201526084016101c7565b60008060008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166399d4360f886040518263ffffffff1660e01b815260040161039391815260200190565b600060405180830381865afa1580156103b0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103d89190810190610a52565b9650965096509650965050508261043c5760405162461bcd60e51b815260206004820152602260248201527f4d61726b6574706c6163653a2047726f75702073616c65206e6f742061637469604482015261766560f01b60648201526084016101c7565b6000821161048c5760405162461bcd60e51b815260206004820152601a60248201527f4d61726b6574706c6163653a205072696365206e6f742073657400000000000060448201526064016101c7565b6001600160a01b0381166104ed5760405162461bcd60e51b815260206004820152602260248201527f4d61726b6574706c6163653a205061796d656e7420746f6b656e206e6f742073604482015261195d60f21b60648201526084016101c7565b841561054c57846104fe8786610b0e565b111561054c5760405162461bcd60e51b815260206004820152601f60248201527f4d61726b6574706c6163653a2045786365656473206d617820737570706c790060448201526064016101c7565b60006105588784610b27565b6002546040516323b872dd60e01b81523360048201526001600160a01b039182166024820152604481018390529192508316906323b872dd906064016020604051808303816000875af11580156105b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d79190610b3e565b50604051630ab714fb60e11b815233600482015260248101899052604481018890527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063156e29f690606401600060405180830381600087803b15801561064757600080fd5b505af115801561065b573d6000803e3d6000fd5b5050604080518a8152602081018590528b93503392507f0d1a0d5e3d583a0e92588799dd06e50fd78c07daf05f0cc06d7b848b1ca445f1910160405180910390a3505060018055505050505050565b60608060008060008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166399d4360f896040518263ffffffff1660e01b815260040161070391815260200190565b600060405180830381865afa158015610720573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107489190810190610a52565b959e949d50929b5090995097509550909350915050565b6107676107d8565b6001600160a01b0381166107cc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101c7565b6107d581610832565b50565b6000546001600160a01b031633146102345760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101c7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146107d557600080fd5b6000602082840312156108a957600080fd5b81356108b481610882565b9392505050565b600080604083850312156108ce57600080fd5b50508035926020909101359150565b6000602082840312156108ef57600080fd5b5035919050565b60005b838110156109115781810151838201526020016108f9565b50506000910152565b600081518084526109328160208601602086016108f6565b601f01601f19169290920160200192915050565b60e08152600061095960e083018a61091a565b828103602084015261096b818a61091a565b604084019890985250506060810194909452911515608084015260a08301526001600160a01b031660c09091015292915050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126109c657600080fd5b815167ffffffffffffffff808211156109e1576109e161099f565b604051601f8301601f19908116603f01168101908282118183101715610a0957610a0961099f565b81604052838152866020858801011115610a2257600080fd5b610a338460208301602089016108f6565b9695505050505050565b80518015158114610a4d57600080fd5b919050565b600080600080600080600060e0888a031215610a6d57600080fd5b875167ffffffffffffffff80821115610a8557600080fd5b610a918b838c016109b5565b985060208a0151915080821115610aa757600080fd5b50610ab48a828b016109b5565b9650506040880151945060608801519350610ad160808901610a3d565b925060a0880151915060c0880151610ae881610882565b8091505092959891949750929550565b634e487b7160e01b600052601160045260246000fd5b80820180821115610b2157610b21610af8565b92915050565b8082028115828204841417610b2157610b21610af8565b600060208284031215610b5057600080fd5b6108b482610a3d56fea2646970667358221220a847bef050d05eee672b8bc747beaedc09e1261a148dd204e0eaa8ca2f94b33b64736f6c63430008180033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/IPModleMarketplace.sol:IPModelMarketplace",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 123,
        "contract": "contracts/IPModleMarketplace.sol:IPModelMarketplace",
        "label": "_status",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 267,
        "contract": "contracts/IPModleMarketplace.sol:IPModelMarketplace",
        "label": "recipient",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}